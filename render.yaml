# render.yaml - WebGIS Full-Stack Deployment Configuration
services:
  # ────────────────────────── Frontend (React + Vite) ──────────────────────────
  - name: webgis-frontend
    type: web
    runtime: static
    repo: https://github.com/YOUR_USERNAME/YOUR_FRONTEND_REPO
    branch: deploy
    autoDeploy: true
    buildCommand: npm install && npm run build
    staticPublishPath: dist
    pullRequestPreviewsEnabled: true
    healthCheckPath: /
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - key: VITE_API_URL
        value: https://webgis-backend.onrender.com/api

  # ────────────────────────── Backend (Django + PostGIS) ───────────────────────────
  - name: webgis-backend
    type: web
    plan: starter
    env: python
    region: ohio
    repo: https://github.com/YOUR_USERNAME/YOUR_BACKEND_REPO
    branch: deploy
    autoDeploy: true
    buildCommand: |
      pip install -r requirements.txt &&
      python manage.py collectstatic --no-input
    startCommand: |
      python manage.py migrate --no-input &&
      gunicorn $DJANGO_PROJ.asgi:application -k uvicorn.workers.UvicornWorker
    envVars:
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: False
      - key: CORS_ALLOWED_ORIGINS
        value: https://webgis-frontend.onrender.com
      - key: REDIS_URL
        fromService:
          type: redis
          name: webgis-redis

  # ────────────────────────── Celery Worker (Async Tasks) ───────────────────────────
  - name: webgis-celery
    type: worker
    env: python
    region: ohio
    repo: https://github.com/YOUR_USERNAME/YOUR_BACKEND_REPO
    branch: deploy
    autoDeploy: true
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A $DJANGO_PROJ worker --loglevel=info
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: webgis-redis
      - key: SECRET_KEY
        sync: false  # optional — if you want to match backend
      - key: DEBUG
        value: False

  # ────────────────────────── Cron Job (Optional Maintenance) ───────────────────────────
  - name: webgis-maintenance
    type: cron
    schedule: "0 4 * * *"
    env: python
    repo: https://github.com/YOUR_USERNAME/YOUR_BACKEND_REPO
    branch: deploy
    buildCommand: pip install -r requirements.txt
    startCommand: python manage.py cleanup_expired_data
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: webgis-redis

# ────────────────────────── Database (PostGIS) ───────────────────────────
databases:
  - name: webgis-database
    plan: basic-256mb
    region: ohio
    databaseName: webgisdb

# ────────────────────────── Redis (Celery Broker) ───────────────────────────
services:
  - name: webgis-redis
    type: redis
    plan: hobby
    region: ohio
